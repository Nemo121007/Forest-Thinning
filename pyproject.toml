[project]
name = "forest_thinning"
version = "0.1.0"
description = "Development of a software system that, based on input data (breed, volume, etc.), forms a logging plan for forest care (logging volume, frequency)"
authors = [
    { name = "Gashkov Saveliy", email = "120210549+Nemo121007@users.noreply.github.com" }
]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.12,<3.14"
dependencies = [
    "numpy (>=2.2.2,<3.0.0)",
    "pandas (>=2.2.3,<3.0.0)",
    "matplotlib (>=3.10.0,<4.0.0)",
    "scikit-learn (>=1.6.1,<2.0.0)",
    "black (>=25.1.0,<26.0.0)",
    "pyside6 (>=6.8.2.1,<7.0.0.0)",
    "pyqtgraph (>=0.13.7,<0.14.0)",
    "pyinstaller (>=6.13.0,<7.0.0)"
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
package-mode = false

[tool.poetry.group.dev.dependencies]
ruff = "^0.9.7"
pre-commit = "^4.1.0"

[tool.poetry-plugin-hook.scripts]
post_install = "pre-commit install"

[tool.ruff]
line-length = 120
select = [
    "F",        # pyflakes
    "E",        # pycodestyle errors
    "W",        # pycodestyle warnings
    "ANN",      # flake8-annotations (type hints)
    "TCH",      # typing-checker
    "UP",       # pyupgrade
    "PYI",      # flake8-pyi
    "TCH",      # typing-checker
    "D",        # pydocstyle
]

[tool.ruff.pyupgrade]
keep-runtime-typing = true

[tool.ruff.flake8-annotations]
allow-star-arg-any = true
mypy-init-return = true
suppress-none-returning = true

[tool.ruff.pydocstyle]
convention = "google"
